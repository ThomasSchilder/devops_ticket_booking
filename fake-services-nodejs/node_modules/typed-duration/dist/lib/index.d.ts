import { TimeDuration, MaybeTimeDuration, Seconds, Milliseconds, Minutes, Hours, Days } from "..";
/**
 * Returns true if the argument is a typed duration object.
 * Also, acts as a type guard.
 *
 */
export declare const isTypedDuration: (maybeTypedDuration: any) => maybeTypedDuration is TimeDuration;
/**
 * Return the unwrapped number from any typed duration, regardless of its type
 */
export declare const valueFrom: (time: MaybeTimeDuration) => number;
/**
 *
 * Return a string representation, with units. For example: `60000ms`
 */
export declare const valueOf: (time: MaybeTimeDuration, defaultUnit?: string) => string;
export declare function secondsOf(time: MaybeTimeDuration): Seconds;
export declare function millisecondsOf(time: MaybeTimeDuration): Milliseconds;
export declare function minutesOf(time: MaybeTimeDuration): Minutes;
export declare function hoursOf(time: MaybeTimeDuration): Hours;
export declare function daysOf(time: MaybeTimeDuration): Days;
export declare const numberFrom: (time: MaybeTimeDuration) => number;
export declare const millisecondsFrom: (time: MaybeTimeDuration) => number;
export declare const secondsFrom: (time: MaybeTimeDuration) => number;
export declare const minutesFrom: (time: MaybeTimeDuration) => number;
export declare const hoursFrom: (time: MaybeTimeDuration) => number;
export declare const daysFrom: (time: MaybeTimeDuration) => number;
